---Create Repo on https://github.com/ST10451732/

1. git init
2. git config --global user.name "ST10451732" 
3. git config --global user.email "ST10451732@vcconnect.edu.za"

4. git clone hhttps://github.com/ST10451732/TutorialRepo1.git
5. git remote show origin
6. git remote add origin http://github.com/ST10451732/TutorialRepo1
7. git remote show origin

8. git pull origin main
9. =====netbeans new project


----------------------------------Venus notes:
1.1. git init
1.2. git config --global user.name "YourStudentNumberHere"
1.3. git config --global user.email "YourStudentEmailHere"

	go to GitHub copy the repository link

2.1. git remote add origin http:/www.github.repo.com 
2.2. git remote show origin

3.1 git pull origin main 

	if you get the unrelated histories error try the next step, otherwise skip to step 4

3.2 git pull origin main --allow-unrelated-histories

	Save your Netbeans project in the folder you opened git bash here

4.1  git status
4.2  git add .
4.3  git status

5.1  git commit -m "Add message here"
5.1  git log

6.1  git push origin main

	go to GitHub and check that the files you pushed appear in your repository 
	
	
	
	-----POE notes:
	
	Create a local Git repository for existing Java project.
		//open terminal and cd to project path
		cd .VCCONNECT/PROG
		rm -rf .git
		
		$ git init
		$ git config --global user.name "username"
		$ git config --global user.email "username@email.com"
		
		//Copy the Repository Link from GitHub: Go to GitHub, navigate to your repository, and copy the repository URL.
		$ git remote add origin {URL of your GitHub repository that you copied.}
			# $ git remote add origin https://github.com//username/repository.git 
		
		//Show added repo
		$ git remote show origin
		
	Add Changes to Repo
		$ git add .
		// got an error:warning: in the working copy of 'gitbash_commands.txt', LF will be replaced by CRLF the next time Git touches it
		
		// these commands help fix this coz currently  “LF will be replaced by CRLF,” indicates that Git is converting line endings from Unix-style (LF) to Windows-style (CRLF) in my repo
		$ git config --global core.autocrlf true
			# Configure Git to ensure line endings in files you checkout are correct for Windows.
			# Run add command again: git add .
			
		
		// add files to repo
		$ git config --global core.autocrlf true
		$ git add . -u
		
	Commit changes to Repo
		$ git commit -m "Your commit message here"
			# $ git commit -m "Added new pre repo commands to inlcude Windows line ending compatability"
	
	
	Push changes to online repo
		//push changes to the GitHub repository:
		$ git push -u origin master
		$ git push 
			#if branch is still the same
					
		
	Check current local repo status		
		$ git status
		
		// Check last git commit histories
		$ git log
		
		// print git log in my own way: seperated by |
		$ git log --pretty=format:"%h | %an | %ad : %s" --date=short
			#%h: Abbreviated commit hash - use this as version or ID
			#%an: Author name
			#%ad: Author date (formatted)
			#%s: Subject (commit message)
			
		
	Revert to previous version
		$ git show ca4ca44:gitbash_commands.txt

	check remote repository configured to online repo
		$ git remote -v
			# origin  https://github.com/username/repository.git (fetch)
			# origin  https://github.com/username/repository.git (push)
			# -- origin is the name of the remote repository
			# -- https://github.com/username/repository.git is the URL of the remote repository
		
		$ git remote show origin
			# gives more details to remote origins

		